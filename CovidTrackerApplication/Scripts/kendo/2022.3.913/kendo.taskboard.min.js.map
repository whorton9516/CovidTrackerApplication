{"version":3,"file":"kendo.taskboard.min.js","sources":["kendo.taskboard.js"],"sourcesContent":["(function(f, define) {\n    define('taskboard/toolbar',[\"kendo.toolbar\"], f);\n})(function() {\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        ToolBar = kendo.ui.ToolBar,\n        Item = kendo.toolbar.Item,\n\n        CLICK = \"click\",\n        TOGGLE = \"toggle\",\n        CLOSE = \"close\",\n        ACTION = \"action\",\n        CHANGE = \"change\",\n        NS = \".taskBoardToolbar\";\n\n    var TaskBoardToolbarStyles = {\n        searchbox: \"k-searchbox k-textbox k-input k-input-md k-rounded-md k-input-solid\",\n        searchIcon: \"k-input-icon k-icon k-i-search\",\n        searchInput: \"k-input-inner\"\n    };\n\n    var TaskBoardToolBar = ToolBar.extend({\n        init: function(element, options) {\n            var that = this;\n\n            that._extendOptions(options);\n\n            ToolBar.fn.init.call(that, element, options);\n\n            that._attachEvents();\n        },\n\n        events: ToolBar.fn.events.concat([\n            ACTION\n        ]),\n\n        defaultTools: {\n            addColumn: { type: \"button\", text: \"Add Column\", name: \"addColumn\", command: \"AddColumnCommand\", icon: \"plus\", rules: \"isEditable\" },\n            spacer: { type: \"spacer\" },\n            search: { type: \"TaskBoardSearch\", text: \"Search\", name: \"search\", command: \"SearchCommand\", icon: \"search\", overflow: \"never\", rules: \"isSearchable\" }\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.bind(TOGGLE, that._click.bind(that));\n            that.bind(CLOSE, that._click.bind(that));\n            that.bind(CLICK, that._click.bind(that));\n            that.bind(CHANGE, that._change.bind(that));\n        },\n\n        _extendOptions: function(options) {\n            var that = this,\n                tools = options.items ? options.items : Object.keys(that.defaultTools);\n\n            options.navigateOnTab = true;\n\n            that.options = options;\n\n            that.options.items = that._extendToolsOptions(tools);\n        },\n\n        _extendToolsOptions: function(tools) {\n            var that = this,\n                messages = that.options.messages;\n\n            if (!tools.length) {\n                return;\n            }\n\n            return tools.map(function(tool) {\n                var isBuiltInTool = $.isPlainObject(tool) && Object.keys(tool).length === 1 && tool.name,\n                    attr = {},\n                    toolOptions;\n\n\n                tool = isBuiltInTool ? tool.name : tool;\n                toolOptions = $.isPlainObject(tool) ? tool : extend({}, that.defaultTools[tool] || { name: tool, command: tool + \"Command\", type: \"button\" });\n\n                if (!that._validateRules(toolOptions)) {\n                    return { hidden: true };\n                }\n\n                attr[kendo.attr(\"command\")] = toolOptions.command;\n                attr[kendo.attr(\"options\")] = toolOptions.options;\n\n                kendo.deepExtend(toolOptions, {\n                    id: toolOptions.id || toolOptions.name + \"-\" + kendo.guid(),\n                    name: toolOptions.name,\n                    text: messages[toolOptions.name] || toolOptions.name,\n                    attributes: extend({\n                        \"aria-label\": messages[toolOptions.name] || toolOptions.name,\n                        \"title\": messages[toolOptions.name]\n                    }, attr),\n                    overflow: toolOptions.overflow\n                });\n\n                if (toolOptions.type === \"buttonGroup\") {\n                    toolOptions.buttons = toolOptions.buttons.map(that._mapButtonGroups.bind(that));\n                }\n\n                if (toolOptions.type === \"splitButton\") {\n                    toolOptions.menuButtons = toolOptions.menuButtons.map(that._mapMenuButtons.bind(that));\n                }\n\n                return toolOptions;\n            }, that);\n        },\n\n        _mapButtonGroups: function(button) {\n            var that = this,\n                messages = that.options.messages,\n                attr = {};\n\n            attr[kendo.attr(\"command\")] = button.command;\n            attr[kendo.attr(\"options\")] = button.options;\n\n            return kendo.deepExtend(button, {\n                attributes: extend({}, button.attributes, {\n                    \"aria-label\": messages[button.name],\n                    \"title\": messages[button.name]\n                }, attr)\n            });\n        },\n\n        _mapMenuButtons: function(button) {\n            var that = this,\n                messages = that.options.messages,\n                attr = {};\n\n            attr[kendo.attr(\"command\")] = button.command;\n            attr[kendo.attr(\"options\")] = button.options;\n\n            return kendo.deepExtend(button,{\n                text: messages[button.name],\n                attributes: extend({}, button.attributes, {\n                    \"aria-label\": messages[button.name],\n                    \"title\": messages[button.name]\n                }, attr)\n            });\n        },\n\n        _validateRules: function(tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if (!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if (!states[rules[i]]) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _click: function(ev) {\n            var command = $(ev.target).attr(kendo.attr(\"command\")),\n                options = $(ev.target).attr(kendo.attr(\"options\"));\n\n            if (!command) {\n                return;\n            }\n\n            this.action({\n                command: command,\n                options: options\n            });\n        },\n\n        _change: function(ev) {\n            var command = $(ev.target).attr(kendo.attr(\"command\")),\n                options = $(ev.target).attr(kendo.attr(\"options\"));\n\n            options = extend({}, options, { value: $(ev.target).val() });\n\n            if (!command) {\n                return;\n            }\n\n            this.action({\n                command: command,\n                options: options\n            });\n        },\n\n        isToolEnabled: function(toolName) {\n            var that = this,\n                options = that.options,\n                found = false;\n\n            for (var i = 0; i < options.items.length; i++) {\n                if (options.items[i].name == toolName) {\n                    found = true;\n                    break;\n                }\n            }\n\n            return options.items[toolName] || found;\n        },\n\n        action: function(args) {\n            this.trigger(ACTION, args);\n        },\n\n        destroy: function() {\n            if (this.search) {\n                this.search.destroy();\n            }\n\n            ToolBar.fn.destroy.call(this);\n        }\n    });\n\n    var SearchTool = Item.extend({\n        init: function(options, toolbar) {\n            var that = this,\n                styles = TaskBoardToolBar.styles,\n                element = $(\"<span class='\" + styles.searchbox + \"'></span>\"),\n                icon = $(\"<span class='\" + styles.searchInputIcon + \"'></span>\"),\n                input = $(\"<input class='\" + styles.searchInput + \"' autocomplete='off' />\");\n\n            that.element = element;\n            that.input = input;\n            that.icon = icon;\n            that.options = options;\n            that.options.type = \"taskBoardSearch\";\n            that.toolbar = toolbar;\n\n            that.attributes();\n            that.renderIcon();\n            that.addUidAttr();\n            that.addIdAttr();\n            that.addOverflowAttr();\n\n            that.input.attr({\n                placeholder: that.options.text,\n                title: that.options.text\n            });\n\n            that.element.append(icon).append(that.input);\n\n            that._bindEvents();\n            that.toolbar.search = that;\n        },\n        attributes: function() {\n            if (this.options.attributes) {\n                this.input.attr(this.options.attributes);\n            }\n        },\n        renderIcon: function() {\n            if (this.options.icon) {\n                this.icon.addClass(TaskBoardToolBar.styles.searchIcon);\n            }\n        },\n        _bindEvents: function() {\n            this._inputHandler = this._input.bind(this);\n            this.input.on(\"input\" + NS, this._inputHandler);\n        },\n        _input: function(ev) {\n            this.toolbar.trigger(CHANGE, { target: ev.target });\n        },\n        destroy: function() {\n            this.element.off(NS);\n        }\n    });\n\n    kendo.toolbar.registerComponent(\"TaskBoardSearch\", SearchTool);\n\n\n    extend(kendo.ui, {\n        taskboard: {\n            ToolBar: TaskBoardToolBar\n        }\n    });\n\n    extend(true, kendo.ui.taskboard.ToolBar, { styles: TaskBoardToolbarStyles });\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n(function(f, define) {\n    define('taskboard/column',[\"kendo.sortable\"], f);\n})(function() {\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Observable = kendo.Observable,\n        extend = $.extend,\n\n        DOT = \".\",\n        NS = DOT + \"kendoTaskBoardColumn\",\n\n        CLICK = \"click\",\n        BLUR = \"blur\",\n\n        MOVE = \"move\",\n        MOVE_START = \"moveStart\",\n        MOVE_END = \"moveEnd\",\n        CHANGE = \"change\",\n        ACTION = \"action\";\n\n    var TaskBoardColumnStyles = {\n        element: \"k-taskboard-column\",\n        header: \"k-taskboard-column-header\",\n        headerText: \"k-taskboard-column-header-text\",\n        ellipsis: \"k-text-ellipsis\",\n        spacer: \"k-spacer\",\n        actions: \"k-taskboard-column-header-actions\",\n        cardsContainer: \"k-taskboard-column-cards-container\",\n        columnCards: \"k-taskboard-column-cards\",\n        actionButton: \"k-taskboard-column-action-button\",\n        button: \"k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n        card: \"k-taskboard-card\",\n        cardTitle: \"k-card-title\",\n        sortableSuffix: \"-kendosortable\",\n        textbox: \"k-textbox k-input k-input-md k-rounded-md k-input-solid\",\n        input: \"k-input-inner\",\n        newColumn: \"k-taskboard-column-new\",\n        editColumn: \"k-taskboard-column-edit\",\n        disabled: \"k-disabled\",\n        dragPlaceholder: \"k-taskboard-drag-placeholder\",\n        dragHint: \"k-taskboard-drag-hint\",\n        ignoreDrag: \"k-taskboard-drag-ignore\",\n        grabbingCursor: \"k-cursor-grabbing\"\n    };\n\n    function preventDefault(ev) { ev.preventDefault(); }\n\n    var TaskBoardColumn = Observable.extend({\n        init: function(options, dataItem) {\n            var that = this;\n\n            that._dataItem = dataItem;\n            that.options = extend(true, {}, options);\n\n            that.sortableUniqueClass = that.options.sortableIdentifier + TaskBoardColumn.styles.sortableSuffix;\n            that._render();\n            that._attachEvents();\n\n            if (options.states.isReorderable) {\n                that._initSortable();\n            }\n\n            Observable.fn.init.call(that);\n        },\n\n        empty: function() {\n            var that = this;\n            that.container.empty();\n        },\n\n        addCard: function(cardHtml) {\n            var that = this;\n            that.container.append(cardHtml);\n        },\n\n        edit: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles;\n\n            that.element.addClass(styles.editColumn);\n            that._renderEditHeader();\n        },\n\n        getDataItem: function() {\n            return this._dataItem;\n        },\n\n        cards: function() {\n            var that = this;\n\n            return that.container.children();\n        },\n\n        template: '<div class=\"#: styles.headerText # #: styles.ellipsis #\">{0}</div>' +\n                  '<span class=\"#: styles.spacer #\"></span>' +\n                  '#=buttons#',\n\n        editTemplate: '<div class=\"#: styles.headerText # #: styles.ellipsis #\">' +\n                        '<span class=\"#: styles.textbox #\">' +\n                            '<input class=\"#: styles.input #\" placeholder=\"#: {0} ? messages.editColumn : messages.newColumn #\" #:kendo.attr(\"command\")#=\"SaveColumnCommand\" value=\"#:{0}#\" />' +\n                        '</span>' +\n                        '</div>' +\n                        '<span class=\"#: styles.spacer #\"></span>' +\n                        '#=buttons#',\n\n        actionButton: '<button class=\"#: styles.actionButton # #: styles.button #\" title=\"#:text#\" #:kendo.attr(\"command\")#=\"#:command#\" #if(options){##:kendo.attr(\"options\")#=\"#:options#\"#}#>' +\n                        '<i class=\"k-button-icon #:icon# #:spriteCssClass#\"></i>' +\n                      '</button>',\n\n        builtinButtons: {\n            \"editColumn\": { name: \"editColumn\", icon: \"edit\", text: \"Edit Column\", command: \"EditColumnCommand\", rules: \"isEditable\" },\n            \"addCard\": { name: \"addCard\", icon: \"add\", text: \"Add Card\", command: \"AddCardCommand\", rules: \"isEditable\" },\n            \"deleteColumn\": { name: \"deleteColumn\", icon: \"close\", text: \"Delete Column\", command: \"DeleteColumnCommand\", rules: \"isEditable\" }\n        },\n\n        defaultButtons: [ \"editColumn\", \"addCard\", \"deleteColumn\" ],\n\n        _render: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                headerLabelId = kendo.guid(),\n                element = $(\"<div class='\" + styles.element + \"'></div>\")\n                    .attr(kendo.attr(\"uid\"), that._dataItem.uid)\n                    .css({\n                        width: that.options.width\n                    })\n                    .attr(\"role\", \"list\").attr(\"aria-labelledby\", headerLabelId),\n                header = $(\"<div class='\" + styles.header + \"'></div>\"),\n                cardsContainer = $(\"<div class='\" + styles.cardsContainer + \"'></div>\"),\n                columnCards = $(\"<div class='\" + styles.columnCards + \"'></div>\");\n\n            that.header = header.appendTo(element).attr(\"id\", headerLabelId);\n\n            that._renderHeader();\n\n            cardsContainer.appendTo(element);\n            that.container = columnCards\n                                .appendTo(cardsContainer)\n                                .addClass(that.sortableUniqueClass);\n\n            that.element = element;\n        },\n\n        _renderHeader: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                options = that.options,\n                template = options.template ? options.template : kendo.format(that.template, \"#:\" + options.dataTextField + \"#\");\n\n            that.header.append(kendo.template(template)(extend(true, {}, {\n                styles: styles,\n                buttons: that._buildActionsHtml()\n            }, that._dataItem)));\n        },\n\n        _renderEditHeader: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                options = that.options,\n                template = options.editTemplate ? options.editTemplate : kendo.format(that.editTemplate, options.dataTextField);\n\n            that.header.html(\"\");\n\n            that.header.append(kendo.template(template)(extend(true, {}, {\n                styles: styles,\n                messages: options.messages,\n                buttons: that._buildActionsHtml()\n            }, that._dataItem)));\n\n            setTimeout(function() {\n                that.header.find(\"input\").trigger(\"focus\");\n            }, 0);\n\n            that.header.find(DOT + styles.actions).addClass(styles.disabled);\n        },\n\n        _buildActionsHtml: function() {\n            var that = this,\n                options = that.options,\n                messages = options.messages,\n                buttons = options.buttons || that.defaultButtons,\n                styles = TaskBoardColumn.styles,\n                html = \"<div class='\" + styles.actions + \"'>\";\n\n            for (var i = 0; i < buttons.length; i++) {\n                var button = buttons[i];\n                button = ($.isPlainObject(button) && Object.keys(button).length === 1 && button.name) ? button.name : button;\n\n                if (typeof button === \"string\") {\n                    button = extend(true, {},\n                        that.builtinButtons[button] || { spriteCssClass: button, command: button + \"Command\" },\n                        { text: messages[button] || button }\n                    );\n                } else if ($.isPlainObject(button) && button.name) {\n                    button = extend(true, button,\n                        { text: messages[button.name] }\n                    );\n                }\n\n                if (!that._validateRules(button)) {\n                    continue;\n                }\n\n                var icon = button.icon ? \"k-icon k-i-\" + button.icon : \"\";\n\n                button.icon = icon;\n                button.spriteCssClass = button.spriteCssClass || \"\";\n\n                html += kendo.template(that.actionButton)(extend(true, {}, {\n                    styles: styles,\n                    options: false\n                }, button));\n            }\n\n            html += \"</div>\";\n\n            return html;\n        },\n\n        _validateRules: function(tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if (!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if (!states[rules[i]]) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _actionClick: function(ev) {\n            var that = this,\n                target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                command = target.attr(kendo.attr(\"command\")),\n                options = target.attr(kendo.attr(\"options\"));\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            that.trigger(ACTION, {\n                command: command,\n                options: extend({ target: target }, options)\n            });\n        },\n\n        _textboxBlur: function(ev) {\n            var that = this,\n                target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                command = target.attr(kendo.attr(\"command\")),\n                options = target.attr(kendo.attr(\"options\"));\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            that.trigger(ACTION, {\n                command: command,\n                options: extend({ target: target }, options)\n            });\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.header.on(CLICK + NS,\n                DOT + TaskBoardColumn.styles.actionButton,\n                that._actionClick.bind(that));\n\n            that.header.on(BLUR + NS,\n                DOT + TaskBoardColumn.styles.input,\n                that._textboxBlur.bind(that));\n\n            that.header.on(\"keyup\" + NS,\n                DOT + TaskBoardColumn.styles.input,\n                function(ev) {\n                    if (ev.keyCode === kendo.keys.ENTER) {\n                        that._textboxBlur(ev);\n                    }\n                }\n            );\n\n            if (that.container) {\n                that.container.on(CLICK + NS,\n                    DOT + TaskBoardColumn.styles.card + \" [\" + kendo.attr(\"command\") + \"]\",\n                    that._actionClick.bind(that));\n\n                that.container.on(CLICK + NS,\n                    DOT + TaskBoardColumn.styles.card + \" a.\" + TaskBoardColumn.styles.cardTitle,\n                    preventDefault);\n\n            }\n        },\n\n        _initSortable: function() {\n            var that = this,\n                isRtl = that.options.states.isRtl,\n                dirClass = isRtl ? \" k-rtl\" : \"\",\n                container = that.container;\n\n            if (!that.container) {\n                return;\n            }\n\n            that.sortable = new ui.Sortable(container, {\n                ignore: DOT + TaskBoardColumn.styles.ignoreDrag + \" *\",\n                connectWith: DOT + that.sortableUniqueClass,\n                filter: DOT + TaskBoardColumn.styles.card,\n                hint: function(element) {\n                    return element.clone()\n                        .addClass(TaskBoardColumn.styles.dragHint + \" \" + TaskBoardColumn.styles.grabbingCursor + dirClass)\n                        .css({\n                        width: element[0].offsetWidth,\n                        height: element[0].offsetHeight\n                    });\n                },\n                placeholder: function(element) {\n                    return $(\"<div></div>\")\n                        .addClass(TaskBoardColumn.styles.dragPlaceholder)\n                        .css({\n                            height: element[0].offsetHeight\n                        });\n                },\n                move: that._move.bind(that),\n                start: that._start.bind(that),\n                end: that._end.bind(that),\n                change: that._change.bind(that)\n            });\n\n            that.sortable.draggable.userEvents.unbind(\"select\");\n            that.sortable.draggable.userEvents.bind(\"select\", that._select.bind(that));\n        },\n\n        _select: function(ev) {\n            var ignoreDragSelectors = TaskBoardColumn.ignoreDragSelectors;\n            var target = $(ev.event.target);\n\n            for (var i = 0; i < ignoreDragSelectors.length; i++) {\n                if (target.is(ignoreDragSelectors[i])) {\n                    ev.preventDefault();\n                    break;\n                }\n            }\n        },\n\n        _move: function(ev) {\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n            this.trigger(MOVE, ev);\n        },\n\n        _start: function(ev) {\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n            this.trigger(MOVE_START, ev);\n        },\n\n        _end: function(ev) {\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n            this.trigger(MOVE_END, ev);\n        },\n\n        _change: function(ev) {\n            var that = this;\n\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n\n            that.trigger(CHANGE, ev);\n\n            if ((ev.action === \"receive\" && ev.newIndex >= 0) || (ev.action === \"sort\" && ev.newIndex !== ev.oldIndex)) {\n                that.trigger(ACTION, {\n                    command: \"MoveCardCommand\",\n                    options: ev\n                });\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.header.off(NS);\n            that.container.off(NS);\n\n            if (that.sortable) {\n                that.sortable.destroy();\n            }\n        }\n    });\n\n    var TaskBoardNewColumn = TaskBoardColumn.extend({\n        _render: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                element = $(\"<div class='\" + styles.element + \"'></div>\").addClass(styles.newColumn).attr(kendo.attr(\"uid\"), that._dataItem.uid),\n                header = $(\"<div class='\" + styles.header + \"'></div>\");\n\n            that.header = header.appendTo(element);\n\n            that._renderEditHeader();\n\n            that.element = element;\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        Column: TaskBoardColumn,\n        NewColumn: TaskBoardNewColumn\n    });\n\n    extend(true, kendo.ui.taskboard.Column, {\n        styles: TaskBoardColumnStyles,\n        ignoreDragSelectors: [\"img\"]\n    });\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n(function(f, define) {\n    define('taskboard/card',[\"kendo.core\"], f);\n})(function() {\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        Observable = kendo.Observable,\n        extend = $.extend;\n\n    var TaskBoardCardStyles = {\n        element: \"k-taskboard-card\",\n        card: \"k-card\",\n        header: \"k-card-header\",\n        hbox: \"k-hbox\",\n        title: \"k-card-title\",\n        link: \"k-link\",\n        spacer: \"k-spacer\",\n        button: \"k-button\",\n        cardMenuButton: \"k-taskboard-card-menu-button k-icon-button\",\n        flatButton: \"k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n        body: \"k-card-body\",\n        actionsIcon: \"k-icon k-i-more-vertical\",\n        moveCursor: \"k-cursor-move\",\n        categoryBorder: \"k-taskboard-card-category\",\n        headerActions: \"k-card-header-actions\",\n        disabled: \"k-disabled\"\n    };\n\n    var TaskBoardCard = Observable.extend({\n        init: function(options, dataItem, resources) {\n            var that = this;\n\n            that._dataItem = dataItem;\n            that.resources = resources;\n\n            that.options = extend(true, {}, options);\n\n            that._render();\n\n            Observable.fn.init.call(that);\n        },\n\n        headerTemplate: '<div class=\"#:styles.header# #:styles.hbox#\">' +\n                            '<a class=\"#:styles.title# #:styles.link#\" href=\"\\\\#\" #if(selectable){##:kendo.attr(\"command\")#=\"SelectCardCommand\"#}#>#:{0}#</a>' +\n                            '<span class=\"#:styles.spacer#\"></span>' +\n                            '#=cardMenuButton#' +\n                        '</div>',\n        bodyTemplate: '<div class=\"#:styles.body#\"><p>#:{0}#</p></div>',\n        cardMenuButtonTemplate: '<div class=\"#:styles.headerActions#\"><button aria-label=\"menu\" class=\"#:styles.button# #:styles.flatButton# #:styles.cardMenuButton#\">' +\n                                    '<span class=\"k-button-icon #:styles.actionsIcon#\"></span>' +\n                                '</button></div>',\n\n        _render: function() {\n            var that = this,\n                options = that.options,\n                styles = TaskBoardCard.styles,\n                template = options.template || that._buildTemplate(),\n                element = $(\"<div class='\" + styles.element + \" \" + styles.card + \" \" + styles.moveCursor + \"'></div>\"),\n                cardMenuButtonTemplate = options.cardMenu ? that.cardMenuButtonTemplate : \"\",\n                resources = that._resources(that._dataItem),\n                borderDir = options.states.isRtl ? \"borderRightColor\" : \"borderLeftColor\",\n                categoryColor;\n\n            element\n                .attr(kendo.attr(\"uid\"), that._dataItem.uid)\n                .attr(\"aria-disabled\", !options.states.isDisabled)\n                .attr(\"role\", \"listitem\")\n                .toggleClass(styles.disabled, options.states.isDisabled);\n\n            categoryColor = (resources[options.dataCategoryField] && resources[options.dataCategoryField].color) ||\n                                that._dataItem.get(options.dataCategoryField);\n\n            if (categoryColor) {\n                element.addClass(styles.categoryBorder).css(borderDir, categoryColor);\n            }\n\n            element.append(kendo.template(template)(extend(true, {}, {\n                styles: styles,\n                cardMenuButton: kendo.template(cardMenuButtonTemplate)({ styles: styles }),\n                selectable: options.states.isSelectable,\n                resources: resources\n            }, that._dataItem)));\n\n            that.element = element;\n        },\n\n        _resources: function(card) {\n            var that = this,\n                resources = {};\n\n            if (!that.resources) {\n                return resources;\n            }\n\n            for (var key in that.resources) {\n                var resource = that.resources[key];\n                var field = resource.field;\n                var cardResources = kendo.getter(field)(card);\n\n                if (!cardResources) {\n                    continue;\n                }\n\n                if (!resource.multiple) {\n                    cardResources = [cardResources];\n                }\n\n                var data = resource.dataSource.view();\n\n                for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                    var cardResource = null;\n\n                    var value = cardResources[resourceIndex];\n\n                    if (!resource.valuePrimitive) {\n                        value = kendo.getter(resource.dataValueField)(value);\n                    }\n\n                    for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                        if (data[dataIndex].get(resource.dataValueField) == value) {\n                            cardResource = data[dataIndex];\n                            break;\n                        }\n                    }\n\n                    if (cardResource !== null) {\n                        var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                        var result = {\n                            field: resource.field,\n                            title: resource.title,\n                            name: resource.name,\n                            text: kendo.getter(resource.dataTextField)(cardResource),\n                            value: value,\n                            color: resourceColor\n                        };\n\n                        if (resource.multiple) {\n                            if (resources[resource.field]) {\n                                resources[resource.field].push(result);\n                            } else {\n                                resources[resource.field] = [result];\n                            }\n                        } else {\n                            resources[resource.field] = result;\n                        }\n                    }\n                }\n            }\n            return resources;\n        },\n\n        _buildTemplate: function() {\n            var that = this,\n                options = that.options,\n                headerTemplate = kendo.format(that.headerTemplate, options.dataTitleField),\n                bodyTemplate = kendo.format(that.bodyTemplate, options.dataDescriptionField);\n\n            return headerTemplate + bodyTemplate;\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        Card: TaskBoardCard\n    });\n\n    extend(true, kendo.ui.taskboard.Card, { styles: TaskBoardCardStyles });\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n(function(f, define) {\n    define('taskboard/cardmenu',[\"kendo.menu\"], f);\n})(function() {\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        template = kendo.template,\n        ContextMenu = kendo.ui.ContextMenu,\n\n        ACTION = \"action\";\n\n    var TaskBoardCardMenu = ContextMenu.extend({\n        init: function(element, options) {\n            var that = this;\n\n            ContextMenu.fn.init.call(that, element, options);\n\n            that._overrideTemplates();\n            that._extendItems();\n\n            that.bind(\"select\", that._onSelect.bind(that));\n            that.bind(\"open\", that._onOpen.bind(that));\n            that.bind(\"activate\", that._focus.bind(that));\n        },\n\n        _overrideTemplates: function() {\n            this.templates.sprite = template(\"#if(spriteCssClass) {#<span class='#: spriteCssClass #'></span>#}#\");\n        },\n\n        defaultItems: {\n            \"editCard\": { name: \"editCard\", text: \"Edit card\", icon: \"edit\", command: \"EditCardCommand\", rules: \"isEditable\" },\n            \"deleteCard\": { name: \"deleteCard\", text: \"Delete card\", icon: \"delete\", command: \"DeleteCardCommand\", rules: \"isEditable\" }\n        },\n\n        events: ContextMenu.fn.events.concat([\n            ACTION\n        ]),\n\n        _extendItems: function() {\n            var that = this,\n                items = that.options.items,\n                item, isBuiltInTool;\n\n            if (items && items.length) {\n                for (var i = 0; i < items.length; i++) {\n                    item = items[i];\n                    isBuiltInTool = $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n\n                    if (isBuiltInTool) {\n                        item = item.name;\n                    }\n\n                    if ($.isPlainObject(item)) {\n                        that._append(item);\n                    } else if (that.defaultItems[item]) {\n                        item = that.defaultItems[item];\n                        that._append(item);\n                    } else if (typeof(item) === \"string\") {\n                        item = { name: item, text: item, spriteCssClass: item, command: item + \"Command\" };\n                        that._append(item);\n                    }\n                }\n            } else {\n                for (var key in that.defaultItems) {\n                    item = that.defaultItems[key];\n                    that._append(item);\n                }\n            }\n        },\n\n        _append: function(item) {\n            var that = this;\n\n            that._extendItem(item);\n\n            if (that._validateRules(item)) {\n                that.append(item);\n            }\n        },\n\n        _extendItem: function(item) {\n            var that = this,\n                messages = that.options.messages,\n                icon = item.icon ? \"k-icon k-i-\" + item.icon : \"\",\n                attr = {};\n\n            attr[kendo.attr(\"command\")] = item.command;\n\n            if (item.options) {\n                attr[kendo.attr(\"options\")] = item.options;\n            }\n\n            extend(item, {\n                text: messages[item.name],\n                spriteCssClass: icon + \" \" + item.spriteCssClass || \"\",\n                attr: attr,\n                uid: kendo.guid()\n            });\n        },\n\n        _validateRules: function(tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if (!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if (!states[rules[i]]) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _onSelect: function(ev) {\n            var command = $(ev.item).attr(kendo.attr(\"command\")),\n                options = $(ev.item).attr(kendo.attr(\"options\")),\n                target = $(ev.target);\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            this.action({\n                command: command,\n                options: extend({ target: target }, options)\n            });\n        },\n\n        _onOpen: function(ev) {\n            var menu = ev.sender,\n                items = menu.options.items;\n\n            if (!items && $.isEmptyObject(this.defaultItems)) {\n                ev.preventDefault();\n            }\n        },\n\n        _focus: function(ev) {\n            if (ev.sender) {\n                ev.sender.element.trigger(\"focus\");\n            }\n        },\n\n        action: function(args) {\n            this.trigger(ACTION, args);\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        CardMenu: TaskBoardCardMenu\n    });\n\n    })(window.kendo.jQuery);\n\n    return window.kendo;\n\n    }, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n(function(f, define) {\n    define('taskboard/commands',[\"kendo.dialog\"], f);\n})(function() {\n\n    (function($, undefined) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            isPlainObject = $.isPlainObject,\n            Class = kendo.Class;\n\n        var TaskBoardCommand = Class.extend({\n            init: function(options) {\n                this.options = options;\n                this.taskboard = options.taskboard;\n            },\n            _confirm: function(title, content, okText, cancel) {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskboardOptions = taskboard.options,\n                    confirm;\n\n                if (isPlainObject(taskboardOptions.editable) && taskboardOptions.editable.confirmation === false ) {\n                    var fakePromise = $.Deferred();\n                    fakePromise.resolve();\n                    return fakePromise;\n                }\n\n                confirm = $(\"<div></div>\").kendoConfirm(extend({}, {\n                    title: title,\n                    content: content,\n                    messages: {\n                        okText: okText,\n                        cancel: cancel\n                    },\n                    buttonLayout: \"normal\"\n                })).data(\"kendoConfirm\");\n\n                confirm.open();\n\n                setTimeout(function() {\n                    confirm.element.trigger(\"focus\");\n                });\n\n                return confirm.result;\n            }\n        });\n\n        // Column commands\n        var AddColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard;\n\n                if (taskboard.trigger(\"editColumn\", { column: null })) {\n                    return;\n                }\n\n                taskboard.columns().each(function(index, column) {\n                    taskboard.enableByColumn(column, false);\n                });\n                taskboard.addColumn();\n            }\n        });\n\n        var EditColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard;\n\n                if (taskboard.trigger(\"editColumn\", { column: options.column })) {\n                    return;\n                }\n\n                taskboard.columns().each(function(index, column) {\n                    taskboard.enableByColumn(column, false);\n                });\n                taskboard.editColumn(options.columnElement);\n            }\n        });\n\n        var DeleteColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard,\n                    taskboardOptions = taskboard.options,\n                    messages = taskboardOptions.messages,\n                    columnDS = taskboard.columnsDataSource;\n\n                var result = that._confirm(messages.deleteColumn, messages.deleteColumnConfirm, messages[\"delete\"], messages.cancel);\n\n                result.done(function() {\n                    if (taskboard.trigger(\"deleteColumn\", { column: options.column })) {\n                        taskboard.dataSource.cancelChanges();\n                        return;\n                    }\n\n                    columnDS.remove(options.column);\n                    columnDS.sync();\n                });\n            }\n        });\n\n        var SaveColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard,\n                    columnSettings = taskboard.options.columnSettings,\n                    columnDS = taskboard.columnsDataSource,\n                    column = options.column,\n                    text = options.target.val();\n\n                if (taskboard.trigger(\"saveColumn\", { column: options.column })) {\n                    taskboard.dataSource.cancelChanges();\n                    return;\n                }\n\n                column.set(columnSettings.dataTextField, text);\n                columnDS.sync();\n            }\n        });\n\n        var CancelEditColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    columnDS = taskboard.columnsDataSource;\n\n                columnDS.cancelChanges();\n            }\n        });\n\n        //Move focus command\n        var MoveFocusCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options,\n                    cardElement = options.cardElement,\n                    columnElement = options.columnElement,\n                    columns = taskboard.columns(),\n                    currentColumnIndex = columnElement.index(),\n                    direction = options.value,\n                    columnIndex, column;\n\n                switch (direction) {\n                    case \"left\":\n                        columnIndex = Math.max(0, currentColumnIndex - 1);\n                        break;\n                    case \"right\":\n                        columnIndex = Math.min(columns.length - 1, currentColumnIndex + 1);\n                        break;\n                    default:\n                        columnIndex = currentColumnIndex;\n                        break;\n                }\n\n                that.columns = columns;\n                that.columnIndex = columnIndex;\n                that.column = column = taskboard._getColumnByElement(columns.eq(columnIndex));\n                that.cards = column.cards();\n\n                if (cardElement) {\n                    that._moveFromCardFocus(direction, cardElement);\n                } else if (columnElement && direction === \"down\") {\n                    that.cards.eq(0).trigger(\"focus\");\n                } else {\n                    columns.eq(columnIndex).trigger(\"focus\");\n                }\n            },\n            _moveFromCardFocus: function(direction, cardElement) {\n                var that = this,\n                    currentIndex = cardElement.index(),\n                    focusCard, index, seekFocusableCard = false;\n\n                switch (direction) {\n                    case \"up\":\n                        index = currentIndex - 1;\n                        break;\n                    case \"down\":\n                        index = currentIndex + 1;\n                        break;\n                    default:\n                        seekFocusableCard = true;\n                        index = currentIndex;\n                        break;\n                }\n\n                focusCard = that.cards.eq(index);\n\n                if (!focusCard.length && seekFocusableCard) {\n                    focusCard = that._getFocusableCard(index, direction);\n                }\n\n                if (index >= 0) {\n                    focusCard.trigger(\"focus\");\n                } else {\n                    that.options.columnElement.focus();\n                }\n            },\n            _getFocusableCard: function(index, direction) {\n                var that = this,\n                    lastIndex = that.cards.length - 1,\n                    focusable = that.cards.eq(Math.min(index, lastIndex));\n\n                if (focusable.length) {\n                    return focusable;\n                }\n\n                if (that.columnIndex <= 0 || that.columnIndex >= that.columns.length - 1) {\n                    return;\n                }\n\n                switch (direction) {\n                    case \"left\":\n                        that.columnIndex = Math.max(0, that.columnIndex - 1);\n                        break;\n                    case \"right\":\n                        that.columnIndex = Math.min(that.columns.length - 1, that.columnIndex + 1);\n                        break;\n                }\n\n                that.column = that.taskboard._getColumnByElement(that.columns.eq(that.columnIndex));\n                that.cards = that.column.cards();\n\n                return that._getFocusableCard(index, direction);\n\n            }\n        });\n\n        // Card commands\n        var TaskBoardBaseCardCommand = TaskBoardCommand.extend({\n            _updateOrder: function(column, currentIndex) {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskBoardOptions = taskboard.options,\n                    dataOrderField = taskBoardOptions.dataOrderField,\n                    options = that.options,\n                    currentCard = options.card,\n                    cardIndex = options.cardElement ? options.cardElement.index() : column.cards().length,\n                    newIndex = currentIndex,\n                    cards = column.cards().map(function(idx, card) {\n                        return taskboard.dataItem(card);\n                    }),\n                    prevCard = cards[cardIndex - 1],\n                    nextCard;\n\n                    currentCard.set(dataOrderField, newIndex);\n\n                    if (prevCard && prevCard.get(dataOrderField) >= currentCard.get(dataOrderField)) {\n                        currentCard.set(dataOrderField, prevCard.get(dataOrderField) + 1);\n                    }\n\n                    for (var i = newIndex + 1; i < cards.length; i++) {\n                        nextCard = cards[i];\n\n                        if (nextCard.get(dataOrderField) <= currentCard.get(dataOrderField)) {\n                            nextCard.set(dataOrderField, currentCard.get(dataOrderField) + 1);\n                            currentCard = nextCard;\n                        } else {\n                            break;\n                        }\n                    }\n            }\n        });\n\n        var SelectCardCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options,\n                    cardElement = options.cardElement;\n\n                taskboard._select(cardElement, true);\n                cardElement.focus();\n            }\n        });\n\n        var SaveChangesCommand = TaskBoardBaseCardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskBoardOptions = taskboard.options,\n                    options = that.options,\n                    receivedStatus = options.card.get(taskBoardOptions.dataStatusField),\n                    targetColumn = taskboard._getColumn(receivedStatus),\n                    activeElm = $(document.activeElement);\n\n                if (activeElm.length) {\n                    activeElm.trigger(\"change\");\n                }\n\n                if (taskboard.pane && taskboard.pane.form && !taskboard.pane.form.validate()) {\n                    return;\n                }\n\n                if (taskboard.trigger(\"saveCard\", { card: options.card })) {\n                    taskboard.dataSource.cancelChanges();\n                    return;\n                }\n\n                if (targetColumn && taskBoardOptions.dataOrderField) {\n                    that._updateOrder(targetColumn, options.card.get(taskBoardOptions.dataOrderField));\n                }\n\n                taskboard.dataSource.sync().then(function() {\n                    taskboard.columns().eq(0).trigger(\"focus\");\n                });\n            }\n        });\n\n        var DeleteCardCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    messages = taskboard.options.messages,\n                    options = that.options;\n\n                var result = that._confirm(messages.deleteCard, messages.deleteCardConfirm, messages[\"delete\"], messages.cancel);\n\n                result\n                    .done(function() {\n                        if (taskboard.trigger(\"deleteCard\", { card: options.card })) {\n                            taskboard.dataSource.cancelChanges();\n                            return;\n                        }\n\n                        taskboard.dataSource.remove(options.card);\n                        taskboard.dataSource.sync().then(function() {\n                            taskboard.columns().eq(0).trigger(\"focus\");\n                        });\n                    })\n                    .fail(function() {\n                        options.cardElement.trigger(\"focus\");\n                    });\n            }\n        });\n\n        var MoveCardCommand = TaskBoardBaseCardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskBoardOptions = taskboard.options,\n                    columnSettings = taskBoardOptions.columnSettings,\n                    options = that.options,\n                    receivedStatus = options.column.get(columnSettings.dataStatusField);\n\n                options.card.set(taskBoardOptions.dataStatusField, receivedStatus);\n\n                if (taskBoardOptions.dataOrderField) {\n                    that._updateOrder(taskboard._getColumn(receivedStatus), options.newIndex);\n                }\n\n                taskboard.dataSource.sync();\n            }\n        });\n\n        var EditCardCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options;\n\n                if (taskboard.trigger(\"editCard\", { card: options.card })) {\n                    return;\n                }\n\n                taskboard._openPane(extend({\n                    pane: \"Edit\"\n                }, options));\n            }\n        });\n\n        var AddCardCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options;\n\n                if (taskboard.trigger(\"editCard\", { card: null })) {\n                    return;\n                }\n                taskboard.dataSource.cancelChanges();\n                taskboard._openPane(extend({\n                    pane: \"Create\"\n                }, options));\n            }\n        });\n\n        // Pane commands\n        var OpenPaneCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard;\n\n                taskboard._openPane({\n                    pane: options.value,\n                    card: options.card,\n                    cardElement: options.cardElement,\n                    column: options.column,\n                    columnElement: options.columnElement\n                });\n            }\n        });\n\n        var ClosePaneCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard;\n\n                taskboard._closePane();\n                taskboard.dataSource.cancelChanges();\n            }\n        });\n\n        // Search command\n\n        var SearchCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    value = that.options.value,\n                    taskboard = that.taskboard,\n                    taskboardOptions = taskboard.options,\n                    searchOptions = taskboardOptions.search,\n                    operator = searchOptions.operator,\n                    fields = (searchOptions && searchOptions.fields) || [ taskboardOptions.dataTitleField, taskboardOptions.dataDescriptionField ],\n                    filters;\n\n                filters = that._buildFilters(fields, operator, value);\n\n                taskboard.dataSource.filter(filters);\n            },\n            _buildFilters: function(fields, operator, value) {\n                var filters = fields.map(function(field) {\n                    return { field: field, operator: operator, value: value };\n                });\n\n                return { logic: \"or\", filters: filters };\n            }\n        });\n\n        extend(kendo.ui.taskboard, {\n            Command: TaskBoardCommand,\n            commands: {\n                AddColumnCommand: AddColumnCommand,\n                EditColumnCommand: EditColumnCommand,\n                DeleteColumnCommand: DeleteColumnCommand,\n                SaveColumnCommand: SaveColumnCommand,\n                CancelEditColumnCommand: CancelEditColumnCommand,\n                OpenPaneCommand: OpenPaneCommand,\n                ClosePaneCommand: ClosePaneCommand,\n                SelectCardCommand: SelectCardCommand,\n                MoveFocusCommand: MoveFocusCommand,\n                SaveChangesCommand: SaveChangesCommand,\n                DeleteCardCommand: DeleteCardCommand,\n                MoveCardCommand: MoveCardCommand,\n                EditCardCommand: EditCardCommand,\n                AddCardCommand: AddCardCommand,\n                SearchCommand: SearchCommand\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n    return window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n(function(f, define) {\n    define('taskboard/pane',[\"kendo.form\"], f);\n})(function() {\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        Observable = kendo.Observable,\n\n        Form = kendo.ui.Form,\n\n        DOT = \".\",\n        NS = DOT + \"kendoTaskBoardPane\",\n\n        ACTION = \"action\",\n        CLICK = \"click\";\n\n    var TaskBoardPaneStyles = {\n        element: \"k-taskboard-pane\",\n        edit: \"k-taskboard-edit-pane\",\n        preview: \"k-taskboard-preview-pane\",\n        header: \"k-taskboard-pane-header\",\n        headerText: \"k-taskboard-pane-header-text\",\n        spacer: \"k-spacer\",\n        headerActions: \"k-taskboard-pane-header-actions\",\n        flatButton: \"k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n        content: \"k-taskboard-pane-content\",\n        footerActions: \"k-taskboard-pane-actions\",\n        footerActionButtons: \"k-actions k-hstack k-justify-content-end\",\n        footerButton: \"k-button k-button-md k-rounded-md k-button-solid\",\n        baseButton: \"k-button-solid-base\",\n        primaryButton: \"k-button-solid-primary\"\n    };\n\n    var TaskBoardPane = Observable.extend({\n        init: function(taskboard, options, dataItem, resources) {\n            var that = this;\n\n            that.taskboard = taskboard;\n            that._dataItem = dataItem;\n            that.resources = resources;\n            that.options = extend(true, {}, options);\n\n            that._render();\n\n            that.element.on(CLICK + NS,\n                \"[\" + kendo.attr(\"command\") + \"]\",\n                that._commandClick.bind(that));\n\n            Observable.fn.init.call(that);\n        },\n        headerTemplate: '<div class=\"#:styles.headerText#\">{0}</div>' +\n                        '<span class=\"#:styles.spacer#\"></span>' +\n                        '<div class=\"#:styles.headerActions#\">' +\n                            '<button class=\"#:styles.flatButton#\" title=\"#:messages.close#\" #:kendo.attr(\"command\")#=\"ClosePaneCommand\">' +\n                                '<span class=\"k-button-icon k-icon k-i-close\"></span>' +\n                            '</button>' +\n                        '</div>',\n        buttonTemplate: '<button class=\"#:styles.footerButton##if(primary){# #:styles.primaryButton# # } else { # #:styles.baseButton# # } #\" title=\"#:text#\" #:kendo.attr(\"command\")#=\"#:command#\" #:kendo.attr(\"options\")#=\"#:options#\">' +\n                            '<span class=\"k-button-icon #:icon# #:spriteCssClass#\"></span>' +\n                            '<span class=\"k-button-text\">#:text#</span>' +\n                        '</button>',\n        contentTemplate: '',\n        builtinButtons: {\n            \"edit\": { name: \"edit\", icon: \"edit\", text: \"Edit\", primary: true, command: \"EditCardCommand\", rules: \"isEditable\" },\n            \"delete\": { name: \"delete\", icon: \"delete\", text: \"Delete\", command: \"DeleteCardCommand\", rules: \"isEditable\" },\n            \"cancel\": { name: \"cancel\", text: \"Cancel\", command: \"ClosePaneCommand\" },\n            \"saveChanges\": { name: \"saveChanges\", text: \"Save\", command: \"SaveChangesCommand\", primary: true, rules: \"isEditable\" },\n            \"create\": { name: \"create\", text: \"Create\", command: \"SaveChangesCommand\", primary: true, rules: \"isEditable\" }\n        },\n        defaultButtons: [],\n        _render: function() {\n            var that = this,\n                styles = TaskBoardPane.styles,\n                element = $(\"<div class='\" + styles.element + \"'></div>\"),\n                header = $(\"<div class='\" + styles.header + \"'></div>\"),\n                content = $(\"<div class='\" + styles.content + \"'></div>\"),\n                buttonsContainer = $(\"<div class='\" + styles.footerActions + \" \" + styles.footerActionButtons + \"'></div>\");\n\n            that.header = header.appendTo(element);\n            that._renderHeader();\n            that.content = content.appendTo(element);\n            that._renderContent();\n            that.buttonsContainer = buttonsContainer.appendTo(element);\n            that.buttonsContainer.append(that._buildButtonsHtml());\n            that.element = element;\n        },\n        _renderHeader: function() {\n            var that = this,\n                styles = TaskBoardPane.styles,\n                options = that.options,\n                messages = options.messages,\n                headerTemplate = options.headerTemplate ? options.headerTemplate : that._buildHeaderTemplate(),\n                resources = that._resources(that._dataItem);\n\n            that.header.append(kendo.template(headerTemplate)(extend(true, {}, {\n                styles: styles,\n                messages: messages,\n                resources: resources\n            }, that._dataItem)));\n        },\n        _buildHeaderTemplate: function() {\n            var that = this;\n            return kendo.format(that.headerTemplate, \"#:\" + that.options.dataTitleField + \"#\");\n        },\n        _renderContent: function() {\n            var that = this,\n                styles = TaskBoardPane.styles,\n                options = that.options,\n                messages = options.messages,\n                contentTemplate = options.template || that.contentTemplate,\n                resources = that._resources(that._dataItem);\n\n            that.content.append(kendo.template(contentTemplate)(extend(true, {}, {\n                styles: styles,\n                messages: messages,\n                resources: resources\n            }, that._dataItem)));\n        },\n        _resources: function(card) {\n            var that = this,\n                resources = {};\n\n            if (!that.resources) {\n                return resources;\n            }\n\n            for (var key in that.resources) {\n                var resource = that.resources[key];\n                var field = resource.field;\n                var cardResources = kendo.getter(field)(card);\n\n                if (!cardResources) {\n                    continue;\n                }\n\n                if (!resource.multiple) {\n                    cardResources = [cardResources];\n                }\n\n                var data = resource.dataSource.view();\n\n                for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                    var cardResource = null;\n\n                    var value = cardResources[resourceIndex];\n\n                    if (!resource.valuePrimitive) {\n                        value = kendo.getter(resource.dataValueField)(value);\n                    }\n\n                    for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                        if (data[dataIndex].get(resource.dataValueField) == value) {\n                            cardResource = data[dataIndex];\n                            break;\n                        }\n                    }\n\n                    if (cardResource !== null) {\n                        var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                        var result = {\n                            field: resource.field,\n                            title: resource.title,\n                            name: resource.name,\n                            text: kendo.getter(resource.dataTextField)(cardResource),\n                            value: value,\n                            color: resourceColor\n                        };\n\n                        if (resource.multiple) {\n                            if (resources[resource.field]) {\n                                resources[resource.field].push(result);\n                            } else {\n                                resources[resource.field] = [result];\n                            }\n                        } else {\n                            resources[resource.field] = result;\n                        }\n                    }\n                }\n            }\n            return resources;\n        },\n        _buildButtonsHtml: function() {\n            var that = this,\n                options = that.options,\n                messages = options.messages,\n                buttons = options.buttons || that.defaultButtons,\n                styles = TaskBoardPane.styles,\n                html = \"\";\n\n            for (var i = 0; i < buttons.length; i++) {\n                var button = buttons[i];\n                button = ($.isPlainObject(button) && Object.keys(button).length === 1 && button.name) ? button.name : button;\n\n                if (typeof button === \"string\") {\n                    button = extend(true, {},\n                        that.builtinButtons[button] || { spriteCssClass: button, command: button + \"Command\" },\n                        { text: messages[button] || button }\n                    );\n                } else if ($.isPlainObject(button) && button.name) {\n                    button = extend(true, button,\n                        { text: messages[button.name] }\n                    );\n                }\n\n                if (!that._validateRules(button)) {\n                    continue;\n                }\n\n                var icon = button.icon ? \"k-icon k-i-\" + button.icon : \"\";\n\n                button.icon = icon;\n                button.spriteCssClass = button.spriteCssClass || \"\";\n\n                html += kendo.template(that.buttonTemplate)(extend(true, {}, {\n                    styles: styles,\n                    messages: messages,\n                    primary: false,\n                    options: null\n                }, button));\n            }\n\n            return html;\n        },\n        _commandClick: function(ev) {\n            var that = this,\n                target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                command = target.attr(kendo.attr(\"command\")),\n                options = target.attr(kendo.attr(\"options\")),\n                card = that._dataItem;\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            that.trigger(ACTION, {\n                command: command,\n                options: extend({ card: card }, options)\n            });\n        },\n        _validateRules: function(tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if (!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if (!states[rules[i]]) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n        destroy: function() {\n            var that = this;\n\n            that.element.off(NS);\n            that.element.remove();\n        }\n    });\n\n    var TaskBoardPreviewPane = TaskBoardPane.extend({\n        init: function(taskboard, options, dataItem, resources) {\n            var that = this;\n\n            options = extend({}, options.previewPane, {\n                dataTitleField: options.dataTitleField,\n                dataDescriptionField: options.dataDescriptionField,\n                messages: options.messages,\n                states: options.states\n            });\n\n            that.contentTemplate = kendo.format(that._contentTemplate, options.dataDescriptionField);\n\n            TaskBoardPane.fn.init.call(that, taskboard, options, dataItem, resources);\n\n            that.element.addClass(TaskBoardPane.styles.preview);\n        },\n        _contentTemplate: \"<p>#:{0}#</p>\",\n        defaultButtons: [ \"delete\", \"edit\" ]\n    });\n\n    var TaskBoardEditPane = TaskBoardPane.extend({\n        init: function(taskboard, options, dataItem) {\n            var that = this;\n\n            options = extend({}, options.editable, {\n                dataTitleField: options.dataTitleField,\n                dataDescriptionField: options.dataDescriptionField,\n                messages: options.messages,\n                states: options.states\n            });\n\n            that.formSettings = extend(that.formSettings, {\n                items: [\n                    { field: options.dataTitleField, label: options.messages[options.dataTitleField] },\n                    { field: options.dataDescriptionField, label: options.messages[options.dataDescriptionField] }\n                ]\n            }, options.form);\n\n            TaskBoardPane.fn.init.call(that, taskboard, options, dataItem);\n\n            that.element.addClass(TaskBoardPane.styles.edit);\n        },\n        defaultButtons: [ \"cancel\", \"saveChanges\" ],\n        formSettings: {\n            buttonsTemplate: \"\"\n        },\n        _buildHeaderTemplate: function() {\n            var that = this;\n            return kendo.format(that.headerTemplate, that.options.messages.edit + \" #:\" + that.options.dataTitleField + \"#\");\n        },\n        _renderContent: function() {\n            var that = this,\n                options = that.options,\n                styles = TaskBoardPane.styles,\n                formSettings = options.form || that.formSettings,\n                formLabelId = kendo.guid(),\n                element = $(\"<div></div>\")\n                    .attr(\"role\", \"form\")\n                    .attr(\"aria-labelledby\", formLabelId);\n\n            that.header.find(DOT + styles.headerText).attr(\"id\", formLabelId);\n\n            that.content.append(element);\n\n            that.form = new Form(element, extend({}, formSettings, {\n                formData: that._dataItem\n            }));\n\n            that.form.element.find(\"input\").trigger(\"focus\");\n        }\n    });\n\n    var TaskBoardCreatePane = TaskBoardEditPane.extend({\n        init: function(taskboard, options, dataItem, resources, column) {\n            var that = this,\n                columnStatusField = options.columnSettings.dataStatusField,\n                firstColumn = taskboard.columnsDataSource.view().at(0),\n                status = column ? column[columnStatusField] : firstColumn[columnStatusField],\n                clone = extend({}, dataItem);\n\n            dataItem = taskboard.dataSource.add();\n            dataItem.set(options.dataStatusField, status);\n\n            for (var key in clone) {\n                dataItem.set(key, clone[key]);\n            }\n\n            TaskBoardEditPane.fn.init.call(that, taskboard, options, dataItem, resources);\n        },\n        _buildHeaderTemplate: function() {\n            var that = this;\n            return kendo.format(that.headerTemplate, that.options.messages.createNewCard);\n        },\n        defaultButtons: [ \"cancel\", \"create\" ]\n    });\n\n    extend(kendo.ui.taskboard, {\n        Pane: TaskBoardPane,\n        panes: {\n            Preview: TaskBoardPreviewPane,\n            Edit: TaskBoardEditPane,\n            Create: TaskBoardCreatePane\n        }\n    });\n\n    extend(true, kendo.ui.taskboard.Pane, { styles: TaskBoardPaneStyles });\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n(function(f, define) {\n    define('taskboard/keyboard',[\"kendo.core\"], f);\n})(function() {\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        Observable = kendo.Observable,\n\n        extend = $.extend,\n\n        DOT = \".\",\n        NS = DOT + \"kendoKeboardManager\",\n        KEYDOWN = \"keydown\",\n        ACTION = \"action\";\n\n\n    var Keyboard = Observable.extend({\n        init: function(element) {\n            var that = this;\n\n            that.register = {};\n            that.element = element;\n\n            that._attachEvents();\n\n            Observable.fn.init.call(that);\n        },\n\n        registerShortcut: function(selector, shortcut, options) {\n            var that = this;\n\n            if (!that.register[selector]) {\n                that.register[selector] = [];\n            }\n\n            if (shortcut.keyCode && isNaN(shortcut.keyCode) && shortcut.keyCode.toUpperCase) {\n                shortcut.keyCode = shortcut.keyCode.toUpperCase().charCodeAt(0);\n            }\n\n            that.register[selector].push({\n                shortcut: extend({\n                    keyCode: null,\n                    ctrlKey: false,\n                    shiftKey: false,\n                    altKey: false\n                }, shortcut),\n                options: options\n            });\n\n        },\n\n        _attachEvents: function() {\n            var that = this,\n                handler = that._handler.bind(that);\n\n            that.element.on(KEYDOWN + NS, handler);\n        },\n\n        _handler: function(ev) {\n            var that = this,\n                target = $(ev.target),\n                shortcuts, action;\n\n            for (var selector in that.register) {\n                if (target.is(selector)) {\n                    shortcuts = that.register[selector];\n                    action = that._getAction(shortcuts, ev);\n\n                    if (action) {\n                        that._trigger(action, ev);\n                        break;\n                    }\n                }\n            }\n        },\n\n        _trigger: function(action, ev) {\n            var that = this,\n                target = $(ev.target);\n\n            if (action.command) {\n                that.trigger(ACTION, extend({}, ev, {\n                    command: action.command,\n                    options: extend({}, {\n                        target: target\n                    }, action.options)\n                }));\n            }\n\n            if (action.handler) {\n                action.handler(ev);\n            }\n        },\n\n        _getAction: function(shortcuts, ev) {\n            var that = this;\n\n            for (var i = 0; i < shortcuts.length; i++) {\n                if (that._compareShortcut(shortcuts[i].shortcut, ev)) {\n                    return shortcuts[i].options;\n                }\n            }\n        },\n\n        _compareShortcut: function(shortcut, ev) {\n            var that = this;\n\n            for (var key in shortcut) {\n                var result = false;\n\n                switch (key) {\n                    case \"ctrlKey\":\n                        result = shortcut[key] !== that._getShortcutModifier(ev);\n                        break;\n                    default:\n                        result = shortcut[key] !== ev[key];\n                        break;\n                }\n\n                if (result) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _getShortcutModifier: function(ev) {\n            var mac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n            return mac ? ev.metaKey : ev.ctrlKey;\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.element.off(NS);\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        KeyboardManager: Keyboard\n    });\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n(function(f, define) {\n    define('kendo.taskboard',[\n        \"./taskboard/toolbar\",\n        \"./taskboard/column\",\n        \"./taskboard/card\",\n        \"./taskboard/cardmenu\",\n        \"./taskboard/commands\",\n        \"./taskboard/pane\",\n        \"./taskboard/keyboard\",\n\n        \"kendo.data\"\n    ], f);\n})(function() {\n\n    var __meta__ = {\n        id: \"taskboard\",\n        name: \"TaskBoard\",\n        category: \"web\",\n        description: \"The TaskBoard widget displays cards.\",\n        depends: [\"data\", \"sortable\", \"dialog\", \"form\", \"menu\", \"toolbar\"]\n    };\n\n    var TaskBoardStyles = {\n        wrapper: \"k-taskboard\",\n        header: \"k-taskboard-header\",\n        content: \"k-taskboard-content\",\n        toolbar: \"k-taskboard-toolbar k-toolbar-flat\",\n        columnsContainer: \"k-taskboard-columns-container\",\n        card: \"k-taskboard-card\",\n        column: \"k-taskboard-column\",\n        selected: \"k-selected\",\n        disabled: \"k-disabled\",\n        ignoreDrag: \"k-taskboard-drag-ignore\"\n    };\n\n    var preventDefault = function(ev) { ev.preventDefault(); };\n\n    (function($, undefined) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            DataSource = kendo.data.DataSource,\n            extend = $.extend,\n            ui = kendo.ui,\n            isArray = Array.isArray,\n            isPlainObject = $.isPlainObject,\n\n            GENERIC = \"_generic\",\n\n            DOT = \".\",\n\n            MOVE = \"move\",\n            MOVE_START = \"moveStart\",\n            MOVE_END = \"moveEnd\",\n            SELECT = \"select\",\n            EXECUTE = \"execute\",\n            ACTION = \"action\",\n            CHANGE = \"change\",\n            ERROR = \"change\",\n            DATABINDING = \"dataBinding\",\n            DATABOUND = \"dataBound\",\n            EDIT_CARD = \"editCard\",\n            SAVE_CARD = \"saveCard\",\n            DELETE_CARD = \"deleteCard\",\n            EDIT_COLUMN = \"editColumn\",\n            SAVE_COLUMN = \"saveColumn\",\n            DELETE_COLUMN = \"deleteColumn\",\n\n            COLUMNSDATABINDING = \"columnsDataBinding\",\n            COLUMNSDATABOUND = \"columnsDataBound\";\n\n        var TaskBoard = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                element = that.wrapper = that.element;\n\n                that._sortableIdentifier = that.element.attr(\"id\") || kendo.guid();\n\n                that._wrapper();\n                that._columnsDataSource();\n                that._initResources();\n                that._dataSource();\n                that._initToolbar();\n                that._initCardMenu();\n                that._initKeyboard();\n\n                if (that.options.autoBind) {\n                    that.load();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                MOVE,\n                MOVE_START,\n                MOVE_END,\n                CHANGE,\n                EXECUTE,\n                SELECT,\n                DATABINDING,\n                DATABOUND,\n                COLUMNSDATABINDING,\n                COLUMNSDATABOUND,\n                EDIT_CARD,\n                SAVE_CARD,\n                DELETE_CARD,\n                EDIT_COLUMN,\n                SAVE_COLUMN,\n                DELETE_COLUMN\n            ],\n\n            options: {\n                name: \"TaskBoard\",\n                autoBind: true,\n                height: 600,\n                width: \"100%\",\n                toolbar: true,\n                dataStatusField: \"status\",\n                dataTitleField: \"title\",\n                dataDescriptionField: \"description\",\n                dataCategoryField: \"category\",\n                dataOrderField: null,\n                cardMenu: true,\n                editable: true,\n                selectable: true,\n                reorderable: true,\n                previewPane: true,\n                search: {\n                    operator: \"contains\"\n                },\n                dataSource: [],\n                columns: [],\n                columnSettings: {\n                    dataStatusField: \"status\",\n                    dataTextField: \"text\",\n                    dataOrderField: null\n                },\n                resources: [],\n                messages: {\n                    edit: \"Edit\",\n                    createNewCard: \"Create new card\",\n                    create: \"Create\",\n                    search: \"Search\",\n                    previewCard: \"Preview card\",\n                    addCard: \"Add card\",\n                    editCard: \"Edit card\",\n                    deleteCard: \"Delete Card\",\n                    addColumn: \"Add column\",\n                    editColumn: \"Edit column\",\n                    deleteColumn: \"Delete column\",\n                    close: \"Close\",\n                    cancel: \"Cancel\",\n                    \"delete\": \"Delete\",\n                    saveChanges: \"Save changes\",\n                    title: \"Title:\",\n                    description: \"Description:\",\n                    newColumn: \"New column\",\n                    deleteColumnConfirm: \"Are you sure you want to delete this column?\",\n                    deleteCardConfirm: \"Are you sure you want to delete this card?\"\n                }\n            },\n\n            items: function() {\n                var that = this,\n                    result = $([]);\n\n                for (var key in that._columns) {\n                    $.merge(result, that._columns[key].cards());\n                }\n\n                return result;\n            },\n\n            itemsByStatus: function(status) {\n                var that = this,\n                    result = that._getColumn(status).cards();\n\n                return result;\n            },\n\n            itemsByColumn: function(columnElm) {\n                var that = this,\n                    column = that._getColumnByElement(columnElm);\n\n                if (column) {\n                    return column.cards();\n                }\n            },\n\n            load: function() {\n                var that = this,\n                    fetchPromises = [];\n\n                that._progress(true);\n\n                fetchPromises.push(that.columnsDataSource.fetch());\n\n                for (var key in that.resources) {\n                    fetchPromises.push(that.resources[key].dataSource.fetch());\n                }\n\n                $.when.apply(null, fetchPromises)\n                    .then(that.dataSource.read.bind(that.dataSource));\n            },\n\n            dataItem: function(cardElm) {\n                var that = this,\n                    dataSource = that.dataSource,\n                    uid;\n\n                cardElm = $(cardElm);\n                uid = cardElm.attr(kendo.attr(\"uid\"));\n\n                return dataSource.getByUid(uid);\n            },\n\n            columnDataItem: function(columnElm) {\n                var that = this,\n                    columnsDataSource = that.columnsDataSource,\n                    uid;\n\n                columnElm = $(columnElm);\n                uid = columnElm.attr(kendo.attr(\"uid\"));\n\n                return columnsDataSource.getByUid(uid);\n            },\n\n            columns: function() {\n                var that = this,\n                    result = $([]);\n\n                for (var key in that._columns) {\n                    $.merge(result, that._columns[key].element);\n                }\n\n                return result;\n            },\n\n            columnByStatus: function(status) {\n                return this._getColumn(status).element;\n            },\n\n            select: function(card, toggle) {\n                var that = this;\n\n                if (!card) {\n                    return that.element\n                        .find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected).eq(0);\n                }\n\n                card = $(card);\n                toggle = toggle !== false;\n\n                if (toggle) {\n                    that.element\n                        .find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected)\n                        .removeClass(TaskBoard.styles.selected);\n                }\n\n                card.toggleClass(TaskBoard.styles.selected, toggle);\n            },\n\n            previewCard: function(cardElement) {\n                var that = this,\n                    options = that.options,\n                    args = that._extendExecArgs({ target: cardElement });\n\n                if (options.previewPane) {\n                    that._openPane(extend({\n                        pane: \"Preview\"\n                    }, args));\n                }\n            },\n\n            editCard: function(cardElement) {\n                var that = this,\n                    options = that.options,\n                    args;\n\n                cardElement = $(cardElement);\n                args = that._extendExecArgs({ target: cardElement });\n\n                if (options.editable) {\n                    that._openPane(extend({\n                        pane: \"Edit\"\n                    }, args));\n                }\n            },\n\n            saveCard: function() {\n                var that = this;\n\n                that.dataSource.sync();\n            },\n\n            deleteCard: function(cardElement) {\n                var that = this,\n                    card = that.dataItem(cardElement);\n\n                that.dataSource.remove(card);\n                that.dataSource.sync();\n            },\n\n            addCard: function(dataItem) {\n                var that = this,\n                    options = that.options,\n                    args = { card: dataItem };\n\n                if (options.editable) {\n                    that._openPane(extend({\n                        pane: \"Create\"\n                    }, args));\n                }\n            },\n\n            addColumn: function(index, data) {\n                var that = this,\n                    columnSettings = extend(true, {}, that.options.columnSettings, {\n                        messages: that.options.messages,\n                        states: that._buildStates(),\n                        sortableIdentifier: that._sortableIdentifier\n                    }),\n                    newColumn, model, column;\n\n                if (isNaN(index) && !data) {\n                    data = index;\n                    index = null;\n                }\n\n                model = that.columnsDataSource._createNewModel(data);\n                index = isNaN(index) || index === null ? that.columnsDataSource.data().length : index;\n                column = that.columns().eq(index);\n                that.columnsDataSource.insert(index, model);\n\n                newColumn = new ui.taskboard.NewColumn(columnSettings, model);\n\n                if (isNaN(index) || !column.length) {\n                    that.columnsContainer.append(newColumn.element);\n                } else {\n                    column.before(newColumn.element);\n                }\n\n                newColumn.bind(ACTION, that.executeCommand.bind(that));\n            },\n\n            editColumn: function(columnElement) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                that._getColumnByElement(columnElement).edit();\n            },\n\n            saveColumn: function() {\n                var that = this;\n\n                that.columnsDataSource.sync();\n            },\n\n            deleteColumn: function(columnElement) {\n                var that = this,\n                    column = that.columnDataItem(columnElement);\n\n                that.columnsDataSource.remove(column);\n                that.columnsDataSource.sync();\n            },\n\n            registerShortcut: function(selector, shortcut, options) {\n                var that = this;\n\n                that.keyboardManager.registerShortcut(selector, shortcut, options);\n            },\n\n            enable: function(cardElement, toggle) {\n                cardElement = $(cardElement);\n\n                cardElement.toggleClass(TaskBoard.styles.disabled, toggle === false);\n                cardElement.attr(\"aria-disabled\", toggle === false);\n            },\n\n            enableByColumn: function(columnElement, toggle) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                that.itemsByColumn(columnElement).each(function(index, card) {\n                    that.enable(card, toggle);\n                });\n            },\n\n            readOnly: function(cardElement, toggle) {\n                cardElement = $(cardElement);\n\n                toggle = toggle !== false;\n\n                cardElement.find(\"[\" + kendo.attr(\"command\") + \"]\").toggleClass(TaskBoard.styles.disabled, toggle);\n                cardElement.find(\"a,button\").toggleClass(TaskBoard.styles.disabled, toggle);\n\n                cardElement.toggleClass(TaskBoard.styles.ignoreDrag, toggle);\n                cardElement.attr(\"aria-readonly\", toggle);\n            },\n\n            readOnlyByColumn: function(columnElement, toggle) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                that.itemsByColumn(columnElement).each(function(index, card) {\n                    that.readOnly(card, toggle);\n                });\n            },\n\n            setDataSource: function(dataSource) {\n                var that = this;\n\n                that.options.dataSource = dataSource;\n                that._dataSource();\n\n                if (that.options.autoBind) {\n                    that.dataSource.read();\n                }\n            },\n\n            setColumnsDataSource: function(dataSource) {\n                var that = this;\n\n                that.options.columns = dataSource;\n                that._columnsDataSource();\n\n                if (that.options.autoBind) {\n                    that.columnsDataSource.fetch(function() {\n                        that._renderCards(that.dataSource.view());\n                    });\n                }\n            },\n\n            _getColumn: function(status) {\n                return this._columns[status];\n            },\n\n            _getColumnByElement: function(columnElement) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                for (var key in that._columns) {\n                    if (that._columns[key].element[0] === columnElement[0]) {\n                        return that._columns[key];\n                    }\n                }\n            },\n\n            _openPane: function(options) {\n                var that = this,\n                    pane = new ui.taskboard.panes[options.pane](that, extend({}, that.options, {\n                        states: that._buildStates()\n                    }), options.card, that.resources, options.column),\n                    focusableElement, keyboardManager;\n\n                if (that.pane) {\n                    that._closePane();\n                }\n\n                that.pane = pane;\n                that.content.after(that.pane.element);\n                that.content.css(\"margin-right\",\n                    that.pane.element.outerWidth() -\n                    parseInt(that.content.css(\"paddingRight\"), 10));\n\n                that.pane.bind(ACTION, that.executeCommand.bind(that));\n\n                that.pane.keyboardManager = keyboardManager = new ui.taskboard.KeyboardManager(that.pane.element);\n\n                keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n\n                keyboardManager.registerShortcut(\"*\", {\n                    keyCode: kendo.keys.ESC\n                }, { command: \"ClosePaneCommand\" });\n\n                keyboardManager.registerShortcut(\"*\", {\n                    keyCode: kendo.keys.ENTER\n                }, { command: \"SaveChangesCommand\", options: {\n                    card: that.pane._dataItem\n                } });\n\n                focusableElement = that.pane.element.find(\"input\");\n\n                if (!focusableElement.length) {\n                    focusableElement = that.pane.element.find(\"button\");\n                }\n\n                setTimeout(function() {\n                    focusableElement.eq(0).trigger(\"focus\");\n                }, 0);\n            },\n\n            _closePane: function() {\n                var that = this;\n\n                if (that.pane) {\n                    that.pane.keyboardManager.destroy();\n                    that.pane.unbind(ACTION);\n                    that.pane.destroy();\n                    delete that.pane;\n\n                    that.content.css(\"margin-right\", \"\");\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options,\n                    styles = TaskBoard.styles,\n                    headerElm = \"<div class='\" + styles.header + \"'></div>\",\n                    contentElm = \"<div class='\" + styles.content + \"'></div>\",\n                    colsContainer = \"<div class='\" + styles.columnsContainer + \"'></div>\";\n\n                that.element.addClass(styles.wrapper)\n                    .width(options.width)\n                    .height(options.height)\n                    .attr(\"role\", \"application\");\n                that.header = $(headerElm).appendTo(that.element);\n                that.content = $(contentElm).appendTo(that.element);\n                that.columnsContainer = $(colsContainer).appendTo(that.content);\n            },\n\n            _initToolbar: function() {\n                var that = this,\n                    styles = TaskBoard.styles,\n                    options = that.options,\n                    toolbarElm = $(\"<div class='\" + styles.toolbar + \"'></div>\"),\n                    toolbarOptions = isArray(options.toolbar) ? { items: options.toolbar } : options.toolbar;\n\n                if (options.toolbar === false) {\n                    return;\n                }\n\n                toolbarOptions = extend({}, toolbarOptions, {\n                    taskboard: this,\n                    messages: options.messages,\n                    action: that.executeCommand.bind(that),\n                    states: that._buildStates()\n                });\n\n                that.header.append(toolbarElm);\n                that.toolbar = new ui.taskboard.ToolBar(toolbarElm, toolbarOptions);\n            },\n\n            _buildStates: function() {\n                var that = this;\n\n                return {\n                    isEditable: that._isEditable(),\n                    isReorderable: that._isReorderable(),\n                    isSelectable: that._isSelectable(),\n                    isReadOnly: !that._isReorderable() && !that._isEditable(),\n                    isDisabled: !that._isReorderable() && !that._isEditable() && !that._isSelectable(),\n                    isSearchable: that._isSearchable(),\n                    notLocalColumns: !(that.columnsDataSource.transport instanceof kendo.data.LocalTransport),\n                    isRtl: kendo.support.isRtl(that.wrapper)\n                };\n            },\n\n            _isSearchable: function() {\n                return !!this.options.search;\n            },\n\n            _isEditable: function() {\n                return !!this.options.editable;\n            },\n\n            _isReorderable: function() {\n                return !!this.options.reorderable;\n            },\n\n            _isSelectable: function() {\n                return !!this.options.selectable;\n            },\n\n            executeCommand: function(args) {\n                var that = this,\n                    commandName = args.command,\n                    commandOptions = extend({ taskboard: this }, isPlainObject(args.options) ? that._extendExecArgs(args.options) : { value: args.options }),\n                    command = ui.taskboard.commands[commandName] && new ui.taskboard.commands[commandName](commandOptions);\n\n\n                if (!that.trigger(EXECUTE, args)) {\n                    if (command) {\n                        command.exec();\n                    } else {\n                        window.console.warn(kendo.format(\"Trying to use {0} command, but such is not available in the kendo.ui.taskboard.commands namespace!\", commandName));\n                    }\n                }\n            },\n\n            _extendExecArgs: function(args) {\n                var that = this,\n                    target = args.draggableEvent ? args.item : args.target,\n                    columnElm, cardElm, columnDataItem, cardDataItem;\n\n                if (args.card) {\n                    target = that.items().filter(function(idx, elm) {\n                        return $(elm).attr(kendo.attr(\"uid\")) === args.card.get(\"uid\");\n                    });\n                }\n\n                if (!target || !(target && target.length)) {\n                    return args;\n                }\n\n                columnElm = args.columnElement || (target.is(DOT + TaskBoard.styles.column) ? target : target.parents(DOT + TaskBoard.styles.column));\n                columnDataItem = that.columnsDataSource.getByUid(columnElm.data(kendo.ns + \"uid\"));\n                cardElm = target.is(DOT + TaskBoard.styles.card) ? target : target.closest(DOT + TaskBoard.styles.card);\n                cardDataItem = that.dataSource.getByUid(cardElm.data(kendo.ns + \"uid\"));\n\n                return extend(args, {\n                    card: cardDataItem,\n                    cardElement: cardElm.length ? cardElm : undefined,\n                    column: columnDataItem,\n                    columnElement: columnElm.length ? columnElm : undefined\n                });\n            },\n\n\n            _select: function(card, toggle) {\n                var that = this;\n\n                if (toggle === null) {\n                    toggle = true;\n                }\n\n                if (!that.trigger(SELECT, { card: card })) {\n                    that.select(card, toggle);\n                    that.previewCard(card);\n                }\n            },\n\n            _columnsDataSource: function() {\n                var that = this,\n                    options = that.options,\n                    columnSettings = options.columnSettings,\n                    columnsDataSource = options.columns;\n\n                columnsDataSource = isArray(columnsDataSource) ? { data: columnsDataSource } : columnsDataSource;\n\n                if (columnSettings.dataOrderField && !columnsDataSource.sort) {\n                    columnsDataSource.sort = { field: columnSettings.dataOrderField, dir: \"asc\" };\n                }\n\n                if (!columnsDataSource.schema) {\n                    var fields = {};\n\n                    fields[columnSettings.dataStatusField] = { type: \"string\", defaultValue: function() { return kendo.guid().split(\"-\")[0]; } };\n                    fields[columnSettings.dataTextField] = { type: \"string\" };\n\n                    if (columnSettings.dataOrderField) {\n                        fields[columnSettings.dataOrderField] = { type: \"number\" };\n                    }\n\n                    columnsDataSource.schema = {\n                        model: {\n                            fields: fields\n                        }\n                    };\n                }\n\n                if (that.columnsDataSource && that._columnsChangeHandler) {\n                    that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                    that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                } else {\n                    that._columnsChangeHandler = that._columnsDataSourceChange.bind(that);\n                    that._columnsErrorHandler = that._error.bind(that);\n                }\n\n                that.columnsDataSource = DataSource.create(columnsDataSource)\n                                .bind(CHANGE, that._columnsChangeHandler)\n                                .bind(ERROR, that._columnsErrorHandler);\n            },\n\n            _columnsDataSourceChange: function(ev) {\n                var that = this,\n                    view = that.columnsDataSource.view(),\n                    columnSettings = extend(true, {}, that.options.columnSettings, {\n                        messages: that.options.messages,\n                        states: that._buildStates(),\n                        sortableIdentifier: that._sortableIdentifier\n                     }),\n                    statusField = columnSettings.dataStatusField;\n\n                if (ev.action && ev.action !== \"sync\") {\n                    return;\n                }\n\n                if (that.trigger(COLUMNSDATABINDING, ev)) {\n                    return;\n                }\n\n                that._progress(true);\n\n                that._columns = {};\n                that.columnsContainer.html(\"\");\n\n                for (var i = 0; i < view.length; i++) {\n                    var data = view[i];\n                    var status = data[statusField] || GENERIC;\n                    var column;\n\n                    column = that._columns[status] = new ui.taskboard.Column(columnSettings, data);\n                    that.columnsContainer.append(column.element);\n                    column.bind(ACTION, that.executeCommand.bind(that));\n                    column.bind(MOVE, that._move.bind(that));\n                    column.bind(MOVE_END, that._moveEnd.bind(that));\n                    column.bind(MOVE_START, that._moveStart.bind(that));\n                    column.bind(CHANGE, that._changeOrder.bind(that));\n                    that._tabindex(column.element);\n                }\n\n                if (ev.action === \"sync\" || ev.action === undefined) {\n                    that._renderCards(that.dataSource.view());\n                }\n\n                that._progress(false);\n                that.trigger(COLUMNSDATABOUND, ev);\n            },\n\n            _move: function(ev) {\n                this.trigger(MOVE, this._extendExecArgs(ev));\n            },\n\n            _moveEnd: function(ev) {\n                this.trigger(MOVE_END, this._extendExecArgs(ev));\n            },\n\n            _moveStart: function(ev) {\n                this.trigger(MOVE_START, this._extendExecArgs(ev));\n            },\n\n            _changeOrder: function(ev) {\n                this.trigger(CHANGE, this._extendExecArgs(ev));\n            },\n\n            _dataSource: function() {\n                var that = this,\n                    options = that.options,\n                    dataSource = options.dataSource;\n\n                    dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (options.dataOrderField && !dataSource.sort) {\n                    dataSource.sort = { field: options.dataOrderField, dir: \"asc\" };\n                }\n\n                if (!dataSource.schema) {\n                    var fields = {};\n\n                    fields[options.dataStatusField] = { type: \"string\" };\n                    fields[options.dataTitleField] = { type: \"string\" };\n                    fields[options.dataDescriptionField] = { type: \"string\" };\n                    fields[options.dataCategoryField] = { type: \"string\" };\n\n                    if (options.dataOrderField) {\n                        fields[options.dataOrderField] = { type: \"number\" };\n                    }\n\n                    dataSource.schema = {\n                        model: {\n                            fields: fields\n                        }\n                    };\n                }\n\n                if (that.dataSource && that._changeHandler) {\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                } else {\n                    that._changeHandler = that._change.bind(that);\n                    that._errorHandler = that._error.bind(that);\n                }\n\n                that.dataSource = DataSource.create(dataSource)\n                                .bind(CHANGE, that._changeHandler);\n            },\n\n            _change: function(ev) {\n                var that = this;\n\n                if (ev.action && ev.action !== \"sync\") {\n                    return;\n                }\n\n                if (that.trigger(DATABINDING, ev)) {\n                    return;\n                }\n\n                that._progress(true);\n\n                that._clearColumns();\n                that._renderCards(that.dataSource.view());\n                that._closePane();\n\n                that.trigger(DATABOUND, ev);\n                that._progress(false);\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _renderCards: function(data) {\n                var that = this;\n\n                for (var i = 0; i < data.length; i++) {\n                    that._renderCard(data[i]);\n                }\n            },\n\n            _renderCard: function(card) {\n                var that = this,\n                    options = extend({}, that.options, { states: that._buildStates() }),\n                    statusField = options.dataStatusField,\n                    status = card[statusField] || GENERIC;\n\n                if (status && that._columns[status]) {\n                    card = new ui.taskboard.Card(options, card, that.resources);\n                    that._columns[status].addCard(card.element);\n                    that._tabindex(card.element);\n                }\n            },\n\n            _clearColumns: function() {\n                var that = this;\n\n                for (var key in that._columns) {\n                    that._columns[key].empty();\n                }\n            },\n\n            _initCardMenu: function() {\n                var that = this,\n                    options = that.options,\n                    cardMenuOptions = isArray(options.cardMenu) ? { items: options.cardMenu } : options.cardMenu;\n\n                cardMenuOptions = extend({}, {\n                    messages: options.messages,\n                    target: that.columnsContainer,\n                    filter: \".k-taskboard-card-menu-button\",\n                    action: that.executeCommand.bind(that),\n                    showOn: \"click\",\n                    alignToAnchor: true,\n                    states: that._buildStates()\n                }, cardMenuOptions);\n\n                if (options.cardMenu === false) {\n                    return;\n                }\n\n                that.cardMenu = new ui.taskboard.CardMenu(\"<ul></ul>\", cardMenuOptions);\n            },\n\n            _initResources: function() {\n                var that = this,\n                    resources = that.options.resources;\n\n                for (var i = 0; i < resources.length; i++) {\n                    that._addResource(resources[i]);\n                }\n            },\n\n            _addResource: function(resource) {\n                var that = this;\n\n                if (!that.resources) {\n                    that.resources = {};\n                }\n\n                that.resources[resource.field] = {\n                    field: resource.field,\n                    name: resource.name,\n                    title: resource.title || resource.field,\n                    dataTextField: resource.dataTextField || \"text\",\n                    dataValueField: resource.dataValueField || \"value\",\n                    dataColorField: resource.dataColorField || \"color\",\n                    valuePrimitive: resource.valuePrimitive === false ? false : true,\n                    multiple: resource.multiple || false,\n                    dataSource: that._resourceDataSource(resource.dataSource)\n                };\n            },\n\n            _resourceDataSource: function(resourceDS) {\n                var dataSource = isArray(resourceDS) ? { data: resourceDS } : resourceDS,\n                    dataSourceInstance = kendo.data.DataSource.create(dataSource);\n\n                return dataSourceInstance;\n            },\n\n            _progress: function(toggle) {\n                var that = this;\n\n                kendo.ui.progress(that.element, toggle);\n            },\n\n            _initKeyboard: function() {\n                var that = this;\n\n                that.keyboardManager = new ui.taskboard.KeyboardManager(that.element);\n\n                that.keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n                that._registerShortcuts();\n            },\n\n            _registerShortcuts: function() {\n                var that = this,\n                    states = that._buildStates();\n\n                if (states.isEditable) {\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: kendo.keys.DELETE\n                    }, { command: \"DeleteColumnCommand\" });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: \"e\",\n                        ctrlKey: true\n                    }, { command: \"EditColumnCommand\", handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: \"a\",\n                        ctrlKey: true\n                    }, { command: \"AddCardCommand\", handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column + \" *\", {\n                        keyCode: kendo.keys.ESC\n                    }, { command: \"CancelEditColumnCommand\" });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.DELETE\n                    }, { command: \"DeleteCardCommand\" });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: \"e\",\n                        ctrlKey: true\n                    }, { command: \"EditCardCommand\", handler: preventDefault });\n                }\n\n                if (states.isSelectable) {\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.ENTER\n                    }, { command: \"SelectCardCommand\", handler: preventDefault });\n                }\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.UP\n                }, { command: \"MoveFocusCommand\", options: { value: \"up\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.DOWN\n                }, { command: \"MoveFocusCommand\", options: { value: \"down\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.LEFT\n                }, { command: \"MoveFocusCommand\", options: { value: \"left\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.RIGHT\n                }, { command: \"MoveFocusCommand\", options: { value: \"right\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                    keyCode: kendo.keys.LEFT\n                }, { command: \"MoveFocusCommand\", options: { value: \"left\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                    keyCode: kendo.keys.RIGHT\n                }, { command: \"MoveFocusCommand\", options: { value: \"right\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                    keyCode: kendo.keys.DOWN\n                }, { command: \"MoveFocusCommand\", options: { value: \"down\" }, handler: preventDefault });\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that._columnsChangeHandler) {\n                    that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                    that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                }\n\n                if (that._changeHandler) {\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                }\n\n                for (var key in that._columns) {\n                    that._columns[key].destroy();\n                }\n\n                if (that.toolbar) {\n                    that.toolbar.destroy();\n                }\n\n                if (that.cardMenu) {\n                    that.cardMenu.destroy();\n                }\n\n                if (that.keyboardManager) {\n                    that.keyboardManager.destroy();\n                }\n\n                if (that.pane) {\n                    that.closePane();\n                }\n\n                Widget.fn.destroy.call(that);\n            }\n        });\n\n        kendo.ui.plugin(TaskBoard);\n\n        extend(true, TaskBoard, { styles: TaskBoardStyles });\n\n    })(window.kendo.jQuery);\n\n    return window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n\n"],"names":["define","$","window","kendo","jQuery","undefined","extend","ToolBar","ui","Item","toolbar","CLICK","TOGGLE","CLOSE","ACTION","CHANGE","NS","TaskBoardToolbarStyles","searchbox","searchIcon","searchInput","TaskBoardToolBar","init","element","options","that","this","_extendOptions","fn","call","_attachEvents","events","concat","defaultTools","addColumn","type","text","name","command","icon","rules","spacer","search","overflow","bind","_click","_change","tools","items","Object","keys","navigateOnTab","_extendToolsOptions","messages","length","map","tool","isBuiltInTool","isPlainObject","attr","toolOptions","_validateRules","hidden","deepExtend","id","guid","attributes","aria-label","title","buttons","_mapButtonGroups","menuButtons","_mapMenuButtons","button","states","split","i","ev","target","action","value","val","isToolEnabled","toolName","found","args","trigger","destroy","SearchTool","styles","searchInputIcon","input","renderIcon","addUidAttr","addIdAttr","addOverflowAttr","placeholder","append","_bindEvents","addClass","_inputHandler","_input","on","off","registerComponent","taskboard","amd","a1","a2","a3","Observable","DOT","BLUR","MOVE","MOVE_START","MOVE_END","TaskBoardColumnStyles","header","headerText","ellipsis","actions","cardsContainer","columnCards","actionButton","card","cardTitle","sortableSuffix","textbox","newColumn","editColumn","disabled","dragPlaceholder","dragHint","ignoreDrag","grabbingCursor","preventDefault","TaskBoardColumn","dataItem","_dataItem","sortableUniqueClass","sortableIdentifier","_render","isReorderable","_initSortable","empty","container","addCard","cardHtml","edit","_renderEditHeader","getDataItem","cards","children","template","editTemplate","builtinButtons","deleteColumn","defaultButtons","headerLabelId","uid","css","width","appendTo","_renderHeader","format","dataTextField","_buildActionsHtml","html","setTimeout","find","spriteCssClass","_actionClick","closest","_textboxBlur","keyCode","ENTER","isRtl","dirClass","sortable","Sortable","ignore","connectWith","filter","hint","clone","offsetWidth","height","offsetHeight","move","_move","start","_start","end","_end","change","draggable","userEvents","unbind","_select","ignoreDragSelectors","event","is","columnElement","sender","parents","newIndex","oldIndex","TaskBoardNewColumn","Column","NewColumn","TaskBoardCardStyles","hbox","link","cardMenuButton","flatButton","body","actionsIcon","moveCursor","categoryBorder","headerActions","TaskBoardCard","resources","headerTemplate","bodyTemplate","cardMenuButtonTemplate","_buildTemplate","cardMenu","_resources","borderDir","categoryColor","isDisabled","toggleClass","dataCategoryField","color","get","selectable","isSelectable","key","resource","field","cardResources","getter","multiple","data","dataSource","view","resourceIndex","cardResource","valuePrimitive","dataValueField","dataIndex","resourceColor","dataColorField","result","push","dataTitleField","dataDescriptionField","Card","ContextMenu","TaskBoardCardMenu","_overrideTemplates","_extendItems","_onSelect","_onOpen","_focus","templates","sprite","defaultItems","editCard","deleteCard","item","_append","_extendItem","menu","isEmptyObject","CardMenu","Class","TaskBoardCommand","_confirm","content","okText","cancel","taskboardOptions","confirm","editable","confirmation","fakePromise","Deferred","resolve","kendoConfirm","buttonLayout","open","AddColumnCommand","exec","column","columns","each","index","enableByColumn","EditColumnCommand","DeleteColumnCommand","columnDS","columnsDataSource","deleteColumnConfirm","done","cancelChanges","remove","sync","SaveColumnCommand","columnSettings","set","CancelEditColumnCommand","MoveFocusCommand","cardElement","currentColumnIndex","direction","columnIndex","Math","max","min","_getColumnByElement","eq","_moveFromCardFocus","currentIndex","focusCard","seekFocusableCard","_getFocusableCard","focus","lastIndex","focusable","TaskBoardBaseCardCommand","_updateOrder","taskBoardOptions","dataOrderField","currentCard","cardIndex","idx","prevCard","nextCard","SelectCardCommand","SaveChangesCommand","receivedStatus","dataStatusField","targetColumn","_getColumn","activeElm","document","activeElement","pane","form","validate","then","DeleteCardCommand","deleteCardConfirm","fail","MoveCardCommand","EditCardCommand","_openPane","AddCardCommand","OpenPaneCommand","ClosePaneCommand","_closePane","SearchCommand","searchOptions","operator","fields","filters","_buildFilters","logic","Command","commands","Form","TaskBoardPaneStyles","preview","footerActions","footerActionButtons","footerButton","baseButton","primaryButton","TaskBoardPane","_commandClick","buttonTemplate","contentTemplate","primary","delete","saveChanges","create","buttonsContainer","_renderContent","_buildButtonsHtml","_buildHeaderTemplate","TaskBoardPreviewPane","previewPane","_contentTemplate","TaskBoardEditPane","formSettings","label","buttonsTemplate","formLabelId","formData","TaskBoardCreatePane","columnStatusField","firstColumn","at","status","add","createNewCard","Pane","panes","Preview","Edit","Create","KEYDOWN","Keyboard","register","registerShortcut","selector","shortcut","isNaN","toUpperCase","charCodeAt","ctrlKey","shiftKey","altKey","handler","_handler","shortcuts","_getAction","_trigger","_compareShortcut","_getShortcutModifier","mac","navigator","platform","indexOf","metaKey","KeyboardManager","__meta__","category","description","depends","TaskBoardStyles","wrapper","columnsContainer","selected","Widget","DataSource","isArray","Array","GENERIC","SELECT","EXECUTE","ERROR","DATABINDING","DATABOUND","EDIT_CARD","SAVE_CARD","DELETE_CARD","EDIT_COLUMN","SAVE_COLUMN","DELETE_COLUMN","COLUMNSDATABINDING","COLUMNSDATABOUND","TaskBoard","_sortableIdentifier","_wrapper","_columnsDataSource","_initResources","_dataSource","_initToolbar","_initCardMenu","_initKeyboard","autoBind","load","notify","reorderable","previewCard","close","_columns","merge","itemsByStatus","itemsByColumn","columnElm","fetchPromises","_progress","fetch","when","apply","read","cardElm","getByUid","columnDataItem","columnByStatus","select","toggle","removeClass","_extendExecArgs","saveCard","_buildStates","model","_createNewModel","insert","before","executeCommand","saveColumn","keyboardManager","enable","readOnly","readOnlyByColumn","setDataSource","setColumnsDataSource","_renderCards","focusableElement","after","outerWidth","parseInt","ESC","headerElm","contentElm","colsContainer","toolbarElm","toolbarOptions","isEditable","_isEditable","_isReorderable","_isSelectable","isReadOnly","isSearchable","_isSearchable","notLocalColumns","transport","LocalTransport","support","commandName","commandOptions","console","warn","draggableEvent","cardDataItem","elm","ns","sort","dir","schema","defaultValue","_columnsChangeHandler","_columnsErrorHandler","_columnsDataSourceChange","_error","statusField","_moveEnd","_moveStart","_changeOrder","_tabindex","_changeHandler","_errorHandler","_clearColumns","_renderCard","cardMenuOptions","showOn","alignToAnchor","_addResource","_resourceDataSource","resourceDS","dataSourceInstance","progress","_registerShortcuts","DELETE","UP","DOWN","LEFT","RIGHT","closePane","plugin"],"mappings":"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"}