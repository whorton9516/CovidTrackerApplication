{"version":3,"file":"kendo.html.input.min.js","sources":["kendo.html.input.js"],"sourcesContent":["(function(f, define) {\n    define('kendo.html.input',[\n        \"kendo.html.base\"\n    ], f);\n})(function() {\n\nvar __meta__ = {\n    id: \"html.input\",\n    name: \"Html.Input\",\n    category: \"web\",\n    description: \"HTML rendering utility for Kendo UI for jQuery.\",\n    depends: [ \"html.base\" ],\n    features: []\n};\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        HTMLBase = kendo.html.HTMLBase;\n\n    var renderCheckBox = function(element, options) {\n        if (arguments[0] === undefined || $.isPlainObject(arguments[0])) {\n            options = element;\n            element = $(\"<input />\");\n        }\n\n        return (new HTMLCheckBox(element, options)).html();\n    };\n\n    var renderRadioButton = function(element, options) {\n        if (arguments[0] === undefined || $.isPlainObject(arguments[0])) {\n            options = element;\n            element = $(\"<input />\");\n        }\n\n        return (new HTMLRadioButton(element, options)).html();\n    };\n\n    var HTMLInput = HTMLBase.extend({\n        init: function(element, options) {\n            var that = this;\n            HTMLBase.fn.init.call(that, element, options);\n            that._wrapper();\n            that._addClasses();\n        },\n        options: {\n            label: null,\n            labelPosition: \"after\",\n            labelId: null,\n            encoded: true\n        },\n        _wrapper: function() {\n            var that = this,\n                element = that.element[0],\n                options = that.options,\n                elementId = element.id;\n\n            that.wrapper = that.element\n                .addClass(options.inputClass)\n                .prop(\"type\", options.type);\n\n            if (!elementId && !!options.label) {\n                element.id = elementId = kendo.guid();\n            }\n\n            if (!!options.label) {\n                that.labelEl = $(\"<label for='\" + elementId + \"' class='\" + options.labelClass + \"'>\");\n\n                if (options.encoded) {\n                    that.labelEl.text(options.label);\n                } else {\n                    that.labelEl.html(options.label);\n                }\n\n                if (options.labelId) {\n                    that.labelEl.attr(\"id\", options.labelId);\n                }\n\n                if (options.optional) {\n                    that.labelEl.append(\"<span class='\" + options.optionalClass + \"'>\" + options.optionalText + \"</span>\");\n                }\n\n                that.element[options.labelPosition](that.labelEl);\n            }\n        },\n        html: function() {\n            var that = this,\n                after = that.options.labelPosition === \"after\",\n                wrapperHtml = HTMLBase.fn.html.call(that);\n\n            if (!that.labelEl) {\n                return wrapperHtml;\n            }\n\n            if (after) {\n                return wrapperHtml + that.labelEl[0].outerHTML;\n            }\n\n            return that.labelEl[0].outerHTML + wrapperHtml;\n        }\n    });\n\n    var HTMLCheckBox = HTMLInput.extend({\n        init: function(element, options) {\n            var that = this;\n            HTMLInput.fn.init.call(that, element, options);\n            that._addClasses();\n        },\n        options: {\n            name: \"HTMLCheckBox\",\n            inputClass: \"k-checkbox\",\n            labelClass: \"k-checkbox-label\",\n            optionalClass: \"k-label-optional\",\n            optionalText: \"(Optional)\",\n            type: \"checkbox\",\n            rounded: \"medium\",\n            size: \"medium\",\n            stylingOptions: [ \"size\", \"rounded\" ]\n        }\n    });\n\n    var HTMLRadioButton = HTMLInput.extend({\n        init: function(element, options) {\n            var that = this;\n            HTMLInput.fn.init.call(that, element, options);\n            that._addClasses();\n        },\n        options: {\n            name: \"HTMLRadioButton\",\n            inputClass: \"k-radio\",\n            labelClass: \"k-radio-label\",\n            optionalClass: \"k-label-optional\",\n            optionalText: \"(Optional)\",\n            type: \"radio\",\n            size: \"medium\",\n            stylingOptions: [ \"size\"]\n        }\n    });\n\n    $.extend(kendo.html, {\n        renderCheckBox: renderCheckBox,\n        renderRadioButton: renderRadioButton,\n        HTMLInput: HTMLInput,\n        HTMLCheckBox: HTMLCheckBox,\n        HTMLRadioButton: HTMLRadioButton\n    });\n\n    kendo.cssProperties.registerPrefix(\"HTMLCheckBox\", \"k-checkbox-\");\n\n    kendo.cssProperties.registerValues(\"HTMLCheckBox\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    kendo.cssProperties.registerPrefix(\"HTMLRadioButton\", \"k-radio-\");\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n\n"],"names":["define","__meta__","id","name","category","description","depends","features","$","window","kendo","jQuery","undefined","HTMLBase","html","renderCheckBox","element","options","arguments","isPlainObject","HTMLCheckBox","renderRadioButton","HTMLRadioButton","HTMLInput","extend","init","that","this","fn","call","_wrapper","_addClasses","label","labelPosition","labelId","encoded","elementId","wrapper","addClass","inputClass","prop","type","guid","labelEl","labelClass","text","attr","optional","append","optionalClass","optionalText","after","wrapperHtml","outerHTML","rounded","size","stylingOptions","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","amd","a1","a2","a3"],"mappings":"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"}